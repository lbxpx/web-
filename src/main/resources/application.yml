spring:
  web:
    resources:
      static-locations: classpath:/static/,classpath:/public/, classpath:/resources/, classpath:/target/resources/public/
  profiles:
    active: dev
  datasource:
    driver-class-name: ${team.datasource.driver-class-name}
    url: ${team.datasource.url}
    username: ${team.datasource.username}
    password: ${team.datasource.password}
    type: ${team.datasource.type}
  data:
    redis:
      host: ${team.redis.host}
      port: ${team.redis.port}
      database: ${team.redis.database}
      password: ${team.redis.password}
# mybatisplus配置
mybatis-plus:
  # xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.xpxp.pojo.entity
  # 以下配置均有默认值,可以不设置
  #  global-config:
  #    db-config:
  #      #主键类型 AUTO:"数据库ID自增" INPUT:"用户输入ID",ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
  #      id-type: auto
  #      #字段策略 IGNORED:"忽略判断"  NOT_NULL:"非 NULL 判断")  NOT_EMPTY:"非空判断"
  #      field-strategy: NOT_EMPTY
  #      #数据库类型
  #      db-type: MYSQL
  configuration:
    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射
    map-underscore-to-camel-case: true
#     如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段
    call-setters-on-nulls: true
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

team:
  jwt:
    user-secret-key: xpxp
    user-token-name: token
    user-ttl: 7200000
  alioss:
    bucket-name: ${team.alioss.bucket-name}
    endpoint: ${team.alioss.endpoint}
    access-key-id: ${team.alioss.access-key-id}
    access-key-secret: ${team.alioss.access-key-secret}
